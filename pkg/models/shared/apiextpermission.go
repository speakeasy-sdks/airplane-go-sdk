// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ApiextPermissionRoleIDEnum - Which role is assigned to this permission.
type ApiextPermissionRoleIDEnum string

const (
	ApiextPermissionRoleIDEnumTeamAdmin        ApiextPermissionRoleIDEnum = "team_admin"
	ApiextPermissionRoleIDEnumTeamDeveloper    ApiextPermissionRoleIDEnum = "team_developer"
	ApiextPermissionRoleIDEnumTaskViewer       ApiextPermissionRoleIDEnum = "task_viewer"
	ApiextPermissionRoleIDEnumTaskRequester    ApiextPermissionRoleIDEnum = "task_requester"
	ApiextPermissionRoleIDEnumTaskExecuter     ApiextPermissionRoleIDEnum = "task_executer"
	ApiextPermissionRoleIDEnumTaskAdmin        ApiextPermissionRoleIDEnum = "task_admin"
	ApiextPermissionRoleIDEnumRunViewer        ApiextPermissionRoleIDEnum = "run_viewer"
	ApiextPermissionRoleIDEnumRunbookViewer    ApiextPermissionRoleIDEnum = "runbook_viewer"
	ApiextPermissionRoleIDEnumRunbookRequester ApiextPermissionRoleIDEnum = "runbook_requester"
	ApiextPermissionRoleIDEnumRunbookExecuter  ApiextPermissionRoleIDEnum = "runbook_executer"
	ApiextPermissionRoleIDEnumRunbookAdmin     ApiextPermissionRoleIDEnum = "runbook_admin"
	ApiextPermissionRoleIDEnumSessionViewer    ApiextPermissionRoleIDEnum = "session_viewer"
	ApiextPermissionRoleIDEnumSessionExecuter  ApiextPermissionRoleIDEnum = "session_executer"
	ApiextPermissionRoleIDEnumSessionAdmin     ApiextPermissionRoleIDEnum = "session_admin"
	ApiextPermissionRoleIDEnumResourceUser     ApiextPermissionRoleIDEnum = "resource_user"
	ApiextPermissionRoleIDEnumDeployCreator    ApiextPermissionRoleIDEnum = "deploy_creator"
	ApiextPermissionRoleIDEnumGroupAdmin       ApiextPermissionRoleIDEnum = "group_admin"
)

func (e *ApiextPermissionRoleIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "team_admin":
		fallthrough
	case "team_developer":
		fallthrough
	case "task_viewer":
		fallthrough
	case "task_requester":
		fallthrough
	case "task_executer":
		fallthrough
	case "task_admin":
		fallthrough
	case "run_viewer":
		fallthrough
	case "runbook_viewer":
		fallthrough
	case "runbook_requester":
		fallthrough
	case "runbook_executer":
		fallthrough
	case "runbook_admin":
		fallthrough
	case "session_viewer":
		fallthrough
	case "session_executer":
		fallthrough
	case "session_admin":
		fallthrough
	case "resource_user":
		fallthrough
	case "deploy_creator":
		fallthrough
	case "group_admin":
		*e = ApiextPermissionRoleIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApiextPermissionRoleIDEnum: %s", s)
	}
}

type ApiextPermission struct {
	// Which action this permission applies to.
	Action *string `json:"action,omitempty"`
	// Which role is assigned to this permission.
	RoleID *ApiextPermissionRoleIDEnum `json:"roleID,omitempty"`
	// ID of the group  this permission applies to if assigned to a group.
	SubGroupID *string `json:"subGroupID,omitempty"`
	// ID of the user this permission applies to if assigned directly to a user.
	SubUserID *string `json:"subUserID,omitempty"`
}
