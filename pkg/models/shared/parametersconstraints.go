// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ParametersConstraints struct {
	// Applicable for TypeObject parameters only.
	AllowUnknownKeys *bool `json:"allowUnknownKeys,omitempty"`
	// Optional determines whether this parameter must be set. A parameter is considered
	// not set if its value is explicitly `null` or if the parameter's slug is not included
	// in the enclosing object. It does _not_ validate whether the value is "empty", f.e.
	// `""` for a string or `0` for an integer. To validate that, use a different constraint
	// such as a regex (or other, future constraints).
	//
	// In other words, `Optional` means `Nullable`.
	Optional *bool       `json:"optional,omitempty"`
	Options  interface{} `json:"options,omitempty"`
	Regex    *string     `json:"regex,omitempty"`
}

func (o *ParametersConstraints) GetAllowUnknownKeys() *bool {
	if o == nil {
		return nil
	}
	return o.AllowUnknownKeys
}

func (o *ParametersConstraints) GetOptional() *bool {
	if o == nil {
		return nil
	}
	return o.Optional
}

func (o *ParametersConstraints) GetOptions() interface{} {
	if o == nil {
		return nil
	}
	return o.Options
}

func (o *ParametersConstraints) GetRegex() *string {
	if o == nil {
		return nil
	}
	return o.Regex
}
